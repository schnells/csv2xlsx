name: Build Windows Executable

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-windows:
    runs-on: windows-latest  # Verwenden eines Windows-Servers für den Build

    steps:
      # Schritt 1: Checkout des Codes
      - name: Checkout repository
        uses: actions/checkout@v3

      # Schritt 2: Python einrichten
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Schritt 3: Abhängigkeiten installieren
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller pandas openpyxl tkinterdnd2 pillow

      # Schritt 4: PNG zu ICO konvertieren
      - name: Convert PNG to ICO
        run: |
          python -c "from PIL import Image; img = Image.open('icon.png'); img.save('icon.ico', format='ICO', sizes=[(256, 256)])"

      # Schritt 5: PyInstaller ausführen, um die .exe zu kompilieren
      - name: Build the executable
        run: |
          pyinstaller --onefile --icon=icon.ico --add-data "icon.png:." main.py

      # Schritt 6: Liste der Dateien im dist/ Verzeichnis anzeigen (Debugging)
      - name: List files in dist/ directory
        run: |
          dir dist/

      # Schritt 7: Lade die .exe hoch als Artifact
      - name: Upload .exe as artifact
        uses: actions/upload-artifact@v4
        with:
          name: Executable Files
          path: dist/main.exe  # Die Windows .exe-Datei, die PyInstaller erstellt hat
